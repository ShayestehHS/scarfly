version: '2'

services:
    nginx:
        container_name: nginx
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile
        ports:
            - 80:80
            - 443:443
        volumes:
            - static_volume:/app/backend/static
            - media_volume:/app/backend/media
            - ./docker/nginx/certbot/conf:/etc/letsencrypt
            - ./docker/nginx/certbot/www:/var/www/certbot
        depends_on:
            - backend
    certbot:
        container_name: certbot
        image: certbot/certbot
        restart: unless-stopped
        volumes:
            - ./docker/nginx/certbot/conf:/etc/letsencrypt
            - ./docker/nginx/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    backend:
        container_name: backend
        restart: unless-stopped
        env_file:
          - backend/.env
        build:
            context: .
            dockerfile: ./docker/backend/Dockerfile
        entrypoint: /app/docker/backend/wsgi-entrypoint.sh
        volumes:
            - static_volume:/app/backend/static
            - media_volume:/app/backend/media
        expose:
            - 8000
        depends_on:
          - db
    db:
      container_name: db
      image: postgres:13-alpine
      restart: always
      volumes:
        - postgres_volume:/var/lib/postgresql/data
      env_file:
        - ./backend/.env

    bot:
      container_name: bot
      build:
        context: .
        dockerfile: ./docker/bot/Dockerfile
      depends_on:
        - db
      restart: always
      env_file:
        - ./telegram_bot/.env
      volumes:
        - /codebase:/codebase
        - /storage:/storage

volumes:
    static_volume: {}
    media_volume: {}
    postgres_volume: {}